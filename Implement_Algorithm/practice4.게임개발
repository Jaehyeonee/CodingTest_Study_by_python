N, M = map(int, input().split())
A, B, direction = map(int, input().split())



# 북 동 남 서 
dx = [-1, 0, 1, 0]
dy = [0, 1, 0, -1]


count=1
turn_count=0

# 맵 생성
game_map =[]    #게임 맵을 담을 리스트 변수
for i in range(N):
    game_map.append(list(map(int, input().split())))

game_map[A][B]=1 #시작점은 방문했으니까 1로


# 회전 할때마다 바뀌는 값을 함수로 따로 작성

def left_direction():
    global direction
    direction -=1
    
    if direction == -1:    #북쪽에서 회전해 서쪽방향을 바라보는 경우
        direction = 3

while True:
    left_direction()
    nx = A + dx[direction]
    ny = B + dy[direction]
    #회전 한 이후 정면에 가보지 않은 칸이 존재하는 경우 이동
    if game_map[nx][ny]==0:
        game_map[nx][ny] =1
        A = nx
        B = ny
        count+=1
        turn_count =0
        continue

    #회전한 이후 정면에 가보지 않은 칸이 없거나 바다인 경우
    else:
        turn_count +=1

    if turn_count == 4:         # 모든 방향 다 갈 수 없을 때
        nx = A -dx[direction]
        ny = B -dy[direction]

        if game_map[nx][ny] == 0: # 뒤로 갈수 있으면 이동
            A = nx
            B = ny

        else:                   # 뒤가 바다인경우
            break
        turn_count = 0
print(count)
